1. s3 bucket using amplify
2. upload files from backend only into s3 bucket.
3. pagination 
4. folders
	create folders table
	create folders table on UI
	archive option 
	unuique name 

5. archive disable the folder
6. store the uploaded file along with folder name into the table
7. user authentication and autherization
8. flask filer to check the jwt token
9. refesh tokens (longlived) and access token(short lived)
10 . implement CSRF and httponly cookies for token security management.

use usecontext & provider in the router component so that every component can access the data  


commands

cd backend
flask --app=./app:app db init
flask --app=./app:app db migrate
flask --app=./app:app db upgrade

docker run --name my_postgres_container -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 postgres
psql -h localhost -U postgres -d postgres

\d+ user


11. csrf token implementation
12. empty the folder --> then delete
13. add dns for internal vpc services 
14. use terraform and aws secret manager for the env loading.

VPC
------------
Here is a list of the key **VPC components**:

create 4 subnets
2 in one AZ (pri, pub)
two in another AZ(pri, pub)

1. **VPC (Virtual Private Cloud)**
2. **Subnets**
   - Public Subnet
   - Private Subnet
3. **Route Tables**
4. **Internet Gateway (IGW)**
5. **NAT Gateway / NAT Instance**
6. **VPC Peering**
7. **VPN Gateway**
8. **VPC Endpoints**
9. **Security Groups**
10. **Network Access Control Lists (NACLs)**
11. **Elastic IP (EIP)**
12. **DHCP Option Sets**
13. **Transit Gateway** (for multiple VPCs)
14. **VPC Flow Logs** 
15. **Customer Gateway** (for VPN connections)
16. **PrivateLink**
17. **Direct Connect Gateway**



my arch
-------
EC2
LB
ASG
VPC
VPC endpoint ---> for VPC to use S3 and dynamodb
ACL
RDS
DynmoDB
S3 
Lambda -------> 
SQS ----------> for pushing archive events, after finishing the restoration push notification --> SNS
Eventbridge --> trigger lambdas
cloudwatch --> for lambda metric(queue size)
API gateway --> for lambda

*log & metric monitoroing on the VPC.

DNS
VPN



write a blog explain what is IGW and what is NAt gateway.
blog about token based authentocation for various attacks like XXS, CSRF ....


launch
-------
VPC ---> done
EC2, ALB, ASG --> not needed for now
s3 --> done
SQS --> 50% done (only path events)
Lambda1 () ---> archive, copy from s1 to s2 -------------------------------------> done 
Lambda2 () --> initiate restore(dynamodb updation & s3.restore_initiation) 	
Lambda3 () --> check the status(s3.head & dynamodb updation & rds count check)
RDS


SecretsManager
how to setup lambda functions using terraform along with envireonment variables


docker run --name my_postgres_container -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 postgres




1. security groups --> . we need a security group of a particular vpc only. 